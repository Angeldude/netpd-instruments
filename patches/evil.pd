#N canvas 797 212 357 460 10;
#N canvas 624 75 293 96 NETPD 0;
#N canvas 483 313 318 115 abslist 0;
#X msg 12 14 evil-signal-to-2x8bit;
#X msg 12 40 evil-2x8bit-to-signal;
#X msg 12 65 master-param;
#X msg 12 89 i2mx;
#X restore 12 34 pd abslist;
#X msg 12 8 version 0 0 2;
#X restore 10 14 pd NETPD 2 0;
#X obj 9 69 netpd_head \$1 evil;
#N canvas 610 170 297 178 \$1-evil 1;
#X obj 30 12 tgl 15 0 \$0.switch \$0.switch.r empty 17 7 0 10 -262144
-1 -1 0 1;
#X text 58 13 on / off;
#X obj 30 32 bng 15 250 50 0 \$0.grab \$0.bli empty 17 7 0 10 -262144
-1 -1;
#X text 57 31 grab ownership;
#X floatatom 30 52 3 0 0 0 - #0.owner #0.bla, f 3;
#X text 57 51 current owner;
#N canvas 852 184 302 164 ALSA 0;
#X floatatom 12 16 5 0 0 0 - #0.bli #0.alsa.msec, f 5;
#X text 47 16 msec;
#X obj 112 15 vradio 15 1 0 7 \$0.alsa.blocksize \$0.bli empty 0 -8
0 10 -262144 -1 -1 3;
#X text 95 14 64;
#X text 89 29 128;
#X text 89 44 256;
#X text 89 59 512;
#X text 83 74 1024;
#X text 83 91 2048;
#X text 83 107 4096;
#X text 134 15 blocksize;
#X text 62 136 latency compensation (ms);
#X floatatom 9 136 8 0 0 0 - #0.latency.compensation -, f 8;
#X restore 30 93 pd ALSA settings;
#X text 138 92 <- latency compensation;
#X floatatom 30 71 3 8 99 0 - #0.delay.steps.r #0.delay.steps, f 3
;
#X text 57 70 delay (in master steps);
#X obj 30 136 r \$0.receive.buffer.ms;
#X floatatom 30 156 10 0 0 0 - - -, f 10;
#N canvas 852 186 302 162 jack 0;
#X obj 50 16 vradio 15 1 0 7 \$0.jack.frames \$0.bli empty 0 -8 0 10
-262144 -1 -1 3;
#X text 33 15 64;
#X text 27 30 128;
#X text 27 45 256;
#X text 27 60 512;
#X text 21 75 1024;
#X text 21 92 2048;
#X text 21 108 4096;
#X obj 136 17 vradio 15 1 0 3 \$0.jack.periods \$0.bli empty 0 -8 0
10 -262144 -1 -1 2;
#X text 124 16 2;
#X text 124 31 3;
#X text 124 46 4;
#X text 155 15 periods;
#X text 70 15 frames;
#X text 62 136 latency compensation (ms);
#X floatatom 9 136 8 0 0 0 - #0.latency.compensation -, f 8;
#X restore 29 115 pd jack settings;
#X connect 10 0 11 0;
#X restore 10 42 pd \$1-evil;
#N canvas 533 82 462 464 send-signal 0;
#X obj 28 152 evil-signal-to-2x8bit;
#X obj 29 208 tabwrite~ \$0.msb.send;
#X obj 151 189 tabwrite~ \$0.lsb.send;
#X obj 194 108 f;
#X obj 236 110 + 1;
#X obj 194 159 sel 0;
#X obj 161 264 tabdump \$0.lsb.send;
#X obj 39 264 tabdump \$0.msb.send;
#X obj 39 241 t b b;
#X obj 39 293 list append;
#X obj 27 74 inlet~;
#X obj 124 315 loadbang;
#X obj 124 337 f \$1;
#X obj 39 388 list prepend;
#X obj 39 413 s NETPD;
#X obj 263 21 inlet;
#X msg 124 359 list to sendtyped /b/\$1/evil/audio b;
#X obj 263 43 t a b;
#X msg 290 67 0;
#X obj 292 174 table \$0.msb.send 1024;
#X obj 292 195 table \$0.lsb.send 1024;
#X obj 194 135 mod 16;
#X obj 194 71 spigot 0;
#X obj 194 28 bang~;
#X connect 0 0 1 0;
#X connect 0 1 2 0;
#X connect 3 0 21 0;
#X connect 4 0 3 1;
#X connect 5 0 2 0;
#X connect 5 0 1 0;
#X connect 5 0 8 0;
#X connect 6 0 9 1;
#X connect 7 0 9 0;
#X connect 8 0 7 0;
#X connect 8 1 6 0;
#X connect 9 0 13 0;
#X connect 10 0 0 0;
#X connect 11 0 12 0;
#X connect 12 0 16 0;
#X connect 13 0 14 0;
#X connect 15 0 17 0;
#X connect 16 0 13 1;
#X connect 17 0 22 1;
#X connect 17 1 18 0;
#X connect 18 0 3 1;
#X connect 21 0 4 0;
#X connect 21 0 5 0;
#X connect 22 0 3 0;
#X connect 23 0 22 0;
#X restore 14 223 pd send-signal;
#N canvas 181 397 589 371 receive-signal 0;
#X obj 15 17 netpd_r \$1 audio;
#X obj 227 235 evil-2x8bit-to-signal;
#X obj 15 313 s \$0.msb.receive;
#X obj 58 268 s \$0.lsb.receive;
#X obj 15 290 list prepend 0;
#X obj 58 246 list prepend 0;
#X obj 15 96 t a b;
#X obj 42 119 f;
#X obj 226 173 tabplay~ \$0.msb.receive;
#X obj 351 199 tabplay~ \$0.lsb.receive;
#X msg 147 109 0;
#X obj 42 141 + 1;
#X obj 514 195 t b;
#X obj 380 173 t b;
#X obj 226 92 sel 0 1;
#X msg 226 133 stop;
#X obj 227 303 *~;
#X obj 15 223 list split 1024;
#X obj 42 189 * 1024;
#X obj 147 11 inlet;
#X obj 257 36 table \$0.msb.receive 999424;
#X obj 257 56 table \$0.lsb.receive 999424;
#X obj 42 163 mod 976;
#X obj 147 87 sel 0;
#X obj 227 332 outlet~;
#N canvas 547 207 372 522 latency_checker 0;
#X obj 6 15 inlet;
#X obj 7 492 outlet;
#X obj 153 6 inlet;
#X obj 34 238 timer;
#X obj 33 61 f;
#X obj 33 83 + 1;
#N canvas 761 207 168 268 block_length_in_ms 0;
#X obj 13 18 inlet;
#X obj 13 213 outlet;
#X obj 70 73 samplerate~;
#X msg 70 95 1000 \$1;
#X obj 70 117 /;
#X obj 70 139 * 1024;
#X obj 70 42 loadbang;
#X obj 13 187 *;
#X connect 0 0 7 0;
#X connect 2 0 3 0;
#X connect 3 0 4 0;
#X connect 4 0 5 0;
#X connect 5 0 7 1;
#X connect 6 0 2 0;
#X connect 7 0 1 0;
#X restore 79 267 pd block_length_in_ms;
#X obj 33 345 -;
#X obj 33 465 s \$0.receive.buffer.ms;
#X text 79 238 reset timer when receiving starts;
#X obj 33 300 pack f f;
#X msg 33 322 \$2 \$1;
#X obj 6 37 t a b;
#X obj 33 107 t a a;
#X obj 60 128 sel 1;
#X msg 153 81 0;
#X obj 153 175 f;
#X obj 36 201 t b b;
#X obj 36 179 select 0 1;
#X obj 153 56 sel 0;
#X obj 153 28 t a a a;
#X obj 192 112 sel 1;
#X obj 153 153 metro 100;
#X obj 33 373 t a a;
#X obj 222 313 > 100;
#X obj 268 314 t b a;
#X obj 222 342 &&;
#X obj 222 366 change 0;
#X obj 222 411 line~;
#X obj 222 433 outlet~;
#X msg 222 389 \$1 50;
#X connect 0 0 12 0;
#X connect 2 0 20 0;
#X connect 3 0 10 0;
#X connect 4 0 5 0;
#X connect 5 0 4 1;
#X connect 5 0 13 0;
#X connect 6 0 10 1;
#X connect 7 0 23 0;
#X connect 10 0 11 0;
#X connect 11 0 7 0;
#X connect 12 0 1 0;
#X connect 12 1 4 0;
#X connect 13 0 6 0;
#X connect 13 1 14 0;
#X connect 14 0 22 0;
#X connect 15 0 22 0;
#X connect 15 0 4 1;
#X connect 15 0 23 0;
#X connect 16 0 18 0;
#X connect 17 0 3 1;
#X connect 17 1 3 0;
#X connect 18 0 17 0;
#X connect 18 1 3 1;
#X connect 19 0 15 0;
#X connect 20 0 19 0;
#X connect 20 1 16 1;
#X connect 20 2 21 0;
#X connect 20 2 25 0;
#X connect 21 0 3 0;
#X connect 22 0 16 0;
#X connect 23 0 8 0;
#X connect 23 1 24 0;
#X connect 24 0 26 0;
#X connect 25 0 26 0;
#X connect 25 1 26 1;
#X connect 26 0 27 0;
#X connect 27 0 30 0;
#X connect 28 0 29 0;
#X connect 30 0 28 0;
#X restore 15 55 pd latency_checker;
#X obj 147 64 t a a;
#X obj 226 113 delay 50;
#X connect 0 0 25 0;
#X connect 1 0 16 0;
#X connect 4 0 2 0;
#X connect 5 0 3 0;
#X connect 6 0 17 0;
#X connect 6 1 7 0;
#X connect 7 0 11 0;
#X connect 8 0 1 0;
#X connect 8 1 13 0;
#X connect 9 0 1 1;
#X connect 9 1 12 0;
#X connect 10 0 7 1;
#X connect 11 0 22 0;
#X connect 12 0 9 0;
#X connect 13 0 8 0;
#X connect 14 0 27 0;
#X connect 14 1 8 0;
#X connect 14 1 9 0;
#X connect 15 0 8 0;
#X connect 15 0 9 0;
#X connect 16 0 24 0;
#X connect 17 0 4 0;
#X connect 17 1 5 0;
#X connect 18 0 5 1;
#X connect 18 0 4 1;
#X connect 19 0 25 1;
#X connect 19 0 26 0;
#X connect 22 0 7 1;
#X connect 22 0 18 0;
#X connect 23 0 10 0;
#X connect 25 0 6 0;
#X connect 25 1 16 1;
#X connect 26 0 23 0;
#X connect 26 1 14 0;
#X connect 27 0 15 0;
#X restore 14 366 pd receive-signal;
#N canvas 722 409 280 247 ownership 0;
#X obj 25 20 r \$0.grab;
#X obj 25 62 f;
#X obj 52 44 netpd-status-get socket 1;
#X obj 25 132 ==;
#X obj 25 154 s \$0.ownership;
#X obj 25 110 t a a;
#X obj 52 132 s \$0.owner;
#X obj 25 85 netpd_f \$1 owner 0;
#X connect 0 0 1 0;
#X connect 1 0 7 0;
#X connect 2 0 1 1;
#X connect 2 0 3 1;
#X connect 3 0 4 0;
#X connect 5 0 3 0;
#X connect 5 1 6 0;
#X connect 7 0 5 0;
#X restore 160 36 pd ownership;
#N canvas 882 164 390 604 calculate_start_time 0;
#X obj 39 114 master-param pos;
#X obj 12 12 inlet;
#X obj 236 127 master-param 16th;
#N canvas 583 351 298 242 calculate_real_latency 0;
#X obj 16 199 outlet;
#X obj 68 200 s \$0.latency.compensation;
#N canvas 641 269 300 420 jack_latency 0;
#X msg 150 68 2 \$1;
#X obj 150 89 pow;
#X obj 150 44 + 6;
#X obj 38 158 *;
#X obj 59 135 t b a;
#X obj 38 47 + 2;
#X obj 38 78 + 2;
#X text 67 77 why?;
#X obj 38 16 r \$0.jack.periods;
#X obj 150 15 r \$0.jack.frames;
#X text 89 271 convert samples to ms;
#X obj 38 271 t a b;
#X obj 38 318 /;
#X obj 65 295 samplerate~;
#X obj 38 341 * 1000;
#X obj 38 371 outlet;
#X obj 38 214 + 512;
#X text 78 215 why?;
#X connect 0 0 1 0;
#X connect 1 0 4 0;
#X connect 2 0 0 0;
#X connect 3 0 16 0;
#X connect 4 0 3 0;
#X connect 4 1 3 1;
#X connect 5 0 6 0;
#X connect 6 0 3 0;
#X connect 8 0 5 0;
#X connect 9 0 2 0;
#X connect 11 0 12 0;
#X connect 11 1 13 0;
#X connect 12 0 14 0;
#X connect 13 0 12 1;
#X connect 14 0 15 0;
#X connect 16 0 11 0;
#X restore 132 24 pd jack_latency;
#N canvas 238 173 433 321 alsa_latency 0;
#X obj 173 87 <<;
#X obj 173 41 t b a;
#X msg 173 64 64;
#X text 235 191 ALSA blocksize in ms;
#X obj 33 191 /;
#X obj 47 163 t b a;
#X obj 33 213 int;
#X obj 33 254 *;
#X obj 33 234 max 1;
#X obj 33 108 r \$0.alsa.msec;
#X obj 173 15 r \$0.alsa.blocksize;
#X obj 33 281 outlet;
#X text 224 112 convert samples to ms;
#X obj 173 112 t a b;
#X obj 173 159 /;
#X obj 200 136 samplerate~;
#X obj 173 182 * 1000;
#X connect 0 0 13 0;
#X connect 1 0 2 0;
#X connect 1 1 0 1;
#X connect 2 0 0 0;
#X connect 4 0 6 0;
#X connect 5 0 4 0;
#X connect 5 1 4 1;
#X connect 5 1 7 1;
#X connect 6 0 8 0;
#X connect 7 0 11 0;
#X connect 8 0 7 0;
#X connect 9 0 4 0;
#X connect 10 0 1 0;
#X connect 13 0 14 0;
#X connect 13 1 15 0;
#X connect 14 0 16 0;
#X connect 15 0 14 1;
#X connect 16 0 5 0;
#X restore 16 23 pd alsa_latency;
#X obj 16 134 t a a;
#N canvas 423 211 301 243 add_latency_introduced_by_tx/rx_buffers 0
;
#X obj 111 27 loadbang;
#X msg 111 49 1024;
#X obj 111 71 * 2;
#X text 142 49 <- evil frame length;
#X obj 138 116 samplerate~;
#X obj 111 93 t a b;
#X obj 111 139 /;
#X obj 111 161 * 1000;
#X obj 13 182 outlet;
#X obj 13 119 +;
#X obj 13 48 inlet;
#X connect 0 0 1 0;
#X connect 1 0 2 0;
#X connect 2 0 5 0;
#X connect 4 0 6 1;
#X connect 5 0 6 0;
#X connect 5 1 4 0;
#X connect 6 0 7 0;
#X connect 7 0 9 1;
#X connect 9 0 8 0;
#X connect 10 0 9 0;
#X restore 16 87 pd add_latency_introduced_by_tx/rx_buffers;
#X connect 2 0 5 0;
#X connect 3 0 5 0;
#X connect 4 0 0 0;
#X connect 4 1 1 0;
#X connect 5 0 4 0;
#X restore 183 98 pd calculate_real_latency;
#X obj 150 74 r \$0.delay.steps;
#X obj 150 196 *;
#X obj 150 218 -;
#X obj 150 243 /;
#X obj 150 145 f;
#X obj 183 120 t b a;
#X obj 236 149 t b a;
#X obj 12 231 +;
#X obj 12 256 t a a;
#X obj 39 288 wrap;
#X obj 12 288 int;
#X obj 39 311 *;
#X obj 39 423 netpd_s \$1 txmeta;
#X obj 12 338 pack f f;
#X msg 12 368 start \$1 \$2;
#X text 91 366 start at tick and after ms delay;
#X text 89 378 (running master mandatory);
#X msg 12 503 1;
#X obj 12 538 outlet;
#X obj 12 41 sel 1 0;
#X obj 12 397 t a a;
#X obj 12 472 route start stop;
#X msg 58 503 0;
#X msg 99 337 stop;
#X obj 150 7 loadbang;
#X msg 150 29 16;
#X obj 150 51 s \$0.delay.steps.r;
#X obj 12 85 t b b;
#X obj 12 137 f;
#X connect 0 0 32 1;
#X connect 1 0 23 0;
#X connect 2 0 10 0;
#X connect 3 0 9 0;
#X connect 4 0 8 0;
#X connect 5 0 6 0;
#X connect 6 0 7 0;
#X connect 7 0 11 1;
#X connect 8 0 5 0;
#X connect 9 0 8 0;
#X connect 9 1 6 1;
#X connect 10 0 8 0;
#X connect 10 1 7 1;
#X connect 10 1 5 1;
#X connect 10 1 15 1;
#X connect 11 0 12 0;
#X connect 12 0 14 0;
#X connect 12 1 13 0;
#X connect 13 0 15 0;
#X connect 14 0 17 0;
#X connect 15 0 17 1;
#X connect 17 0 18 0;
#X connect 18 0 24 0;
#X connect 21 0 22 0;
#X connect 23 0 31 0;
#X connect 23 1 27 0;
#X connect 24 0 25 0;
#X connect 24 1 16 0;
#X connect 25 0 21 0;
#X connect 25 1 26 0;
#X connect 26 0 22 0;
#X connect 27 0 24 0;
#X connect 28 0 29 0;
#X connect 29 0 30 0;
#X connect 31 0 32 0;
#X connect 31 1 0 0;
#X connect 32 0 11 0;
#X restore 95 171 pd calculate_start_time;
#N canvas 692 213 377 288 playback_control 0;
#X obj 176 29 netpd_r \$1 txmeta;
#X obj 53 253 outlet;
#X obj 53 30 master-param step;
#X obj 53 143 select;
#X obj 176 96 t a a;
#X msg 125 119 \$1;
#X obj 53 177 delay;
#X msg 203 119 \$2;
#X msg 53 216 1;
#X obj 176 53 route start stop;
#X msg 222 173 0;
#X msg 91 111 -1;
#X connect 0 0 9 0;
#X connect 2 0 3 0;
#X connect 3 0 6 0;
#X connect 4 0 5 0;
#X connect 4 1 7 0;
#X connect 5 0 3 1;
#X connect 6 0 8 0;
#X connect 7 0 6 1;
#X connect 8 0 1 0;
#X connect 9 0 4 0;
#X connect 9 1 10 0;
#X connect 9 1 11 0;
#X connect 10 0 1 0;
#X connect 11 0 3 1;
#X restore 14 326 pd playback_control;
#N canvas 1010 196 321 388 switch 0;
#X obj 14 117 r \$0.switch;
#X obj 14 349 outlet;
#X obj 122 93 master-param switch;
#X obj 53 251 list prepend;
#X obj 14 142 moses 1;
#X obj 53 274 route 1 0;
#X msg 78 298 set 0;
#X obj 78 320 s \$0.switch.r;
#X obj 144 116 netpd-status-get dsp 1;
#X obj 122 159 &&;
#X obj 144 138 t b a a;
#X obj 183 256 sel 0;
#X msg 183 278 0;
#X text 7 4 Following conditions must be met before starting:;
#X text 23 26 * master is running;
#X text 22 43 * DSP is turned on;
#X obj 140 180 r \$0.ownership;
#X obj 122 224 &&;
#X text 22 61 * ownership is taken;
#X obj 140 202 t b a a;
#X connect 0 0 4 0;
#X connect 2 0 9 0;
#X connect 3 0 5 0;
#X connect 4 0 1 0;
#X connect 4 1 3 0;
#X connect 5 0 1 0;
#X connect 5 1 6 0;
#X connect 6 0 7 0;
#X connect 8 0 10 0;
#X connect 9 0 17 0;
#X connect 10 0 9 0;
#X connect 10 1 9 1;
#X connect 10 2 11 0;
#X connect 11 0 12 0;
#X connect 12 0 7 0;
#X connect 16 0 19 0;
#X connect 17 0 3 1;
#X connect 19 0 17 0;
#X connect 19 1 17 1;
#X connect 19 2 11 0;
#X restore 95 148 pd switch;
#X obj 14 133 adc~ 1;
#X obj 13 404 i2mx \$1 evil;
#N canvas 943 416 325 183 komischer_bug_workaround 0;
#N canvas 0 128 256 177 \$0.deleteme 0;
#X restore 20 15 pd \$0.deleteme;
#X obj 27 58 loadbang;
#X obj 27 105 s pd-\$0.deleteme;
#X msg 27 82 clear;
#X connect 1 0 3 0;
#X connect 3 0 2 0;
#X restore 140 92 pd komischer_bug_workaround;
#X obj 14 200 clip~ -0.999 0.999;
#X connect 4 0 10 0;
#X connect 4 0 10 1;
#X connect 6 0 3 1;
#X connect 7 0 4 0;
#X connect 8 0 6 0;
#X connect 9 0 12 0;
#X connect 12 0 3 0;
