#N canvas 623 149 368 457 10;
#N canvas 624 75 293 96 NETPD 0;
#N canvas 483 313 318 115 abslist 0;
#X msg 12 14 evil-signal-to-2x8bit;
#X msg 12 40 evil-2x8bit-to-signal;
#X msg 12 65 master-param;
#X msg 12 89 i2mx;
#X restore 12 34 pd abslist;
#X msg 10 9 version 0 0 10;
#X restore 10 14 pd NETPD 2 0;
#X obj 9 69 netpd_head \$1 evil;
#N canvas 582 149 434 219 \$1-evil 1;
#N canvas 906 193 302 164 ALSA 0;
#X floatatom 12 16 5 0 0 0 - #0.bli #0.alsa.msec, f 5;
#X text 47 16 msec;
#X obj 112 15 vradio 15 1 0 7 \$0.alsa.blocksize \$0.bli empty 0 -8
0 10 -262144 -1 -1 3;
#X text 95 14 64;
#X text 89 29 128;
#X text 89 44 256;
#X text 89 59 512;
#X text 83 74 1024;
#X text 83 91 2048;
#X text 83 107 4096;
#X text 134 15 blocksize;
#X text 62 136 latency compensation (ms);
#X floatatom 9 136 8 0 0 0 - #0.latency.compensation -, f 8;
#X restore 167 88 pd ALSA settings;
#X text 275 87 <- latency compensation;
#X text 229 65 delay (in master steps);
#N canvas 852 186 302 162 jack 0;
#X obj 50 16 vradio 15 1 0 7 \$0.jack.frames \$0.bli empty 0 -8 0 10
-262144 -1 -1 5;
#X text 33 15 64;
#X text 27 30 128;
#X text 27 45 256;
#X text 27 60 512;
#X text 21 75 1024;
#X text 21 92 2048;
#X text 21 108 4096;
#X obj 136 17 vradio 15 1 0 3 \$0.jack.periods \$0.bli empty 0 -8 0
10 -262144 -1 -1 2;
#X text 124 16 2;
#X text 124 31 3;
#X text 124 46 4;
#X text 155 15 periods;
#X text 70 15 frames;
#X text 62 136 latency compensation (ms);
#X floatatom 9 136 8 0 0 0 - #0.latency.compensation -, f 8;
#X restore 166 110 pd jack settings;
#X obj 169 67 nbx 3 14 8 128 0 0 \$1-delay \$1-delay empty 0 -8 0 10
-262144 -1 -1 8 256;
#X obj 164 134 tgl 30 0 empty \$0.playback empty 17 7 0 10 -262144
-1 -1 1 1;
#X obj 207 148 hsl 100 15 0 100 0 0 empty \$0.receive.buffer.percent
empty -2 -8 0 10 -262144 -1 -1 9900 1;
#X obj 6 4 cnv 15 145 93 empty empty send 3 8 0 14 -191407 -1 0;
#X obj 50 20 hsl 57 16 0 127 0 0 empty \$0.master.display master 2
8 0 14 -1 -1 -195568 0 1;
#X obj 115 20 hsl 31 16 0 127 0 0 empty \$0.dsp.display dsp 2 8 0 14
-1 -1 -24198 0 1;
#X obj 50 39 hsl 96 16 0 127 0 0 \$0.owner.button \$0.owner.display
owner:you 2 8 0 14 -1 -1 -24198 9500 1;
#X obj 12 77 hsl 63 16 0 127 0 0 empty empty alsa 2 8 0 14 -1 -1 -191407
0 1;
#X obj 83 77 hsl 63 16 0 127 0 0 empty empty jack 2 8 0 14 -1 -1 -191407
0 1;
#X obj 16 58 nbx 14 16 8 128 0 0 empty empty empty 0 -8 0 10 -262144
-1 -191407 8 256;
#X obj 12 58 hsl 134 16 0 127 0 0 empty empty delay:_16 2 8 0 14 -1
-1 -191407 0 1;
#X obj 6 105 cnv 15 145 67 empty empty receive 2 8 0 14 -191407 -1
0;
#X obj 12 122 hsl 134 22 0 127 0 0 empty empty buffer 0 8 0 14 -1 -1
-191407 0 1;
#X obj 9 140 cnv 4 40 4 empty empty empty 20 12 0 14 -4034 -66577 0
;
#X obj 12 147 hsl 134 22 0 127 0 0 empty empty playback 0 8 0 14 -1
-1 -4034 0 1;
#X obj 9 165 cnv 4 87 4 empty empty empty 20 12 0 14 -260097 -66577
0;
#X obj 9 22 vsl 35 30 0 127 0 0 \$0.switch.button empty empty 0 -9
0 10 -262144 -1 -1 200 1;
#X obj 9 20 cnv 15 35 35 empty \$0.switch.display empty 20 12 0 14
-1 -1 0;
#X restore 10 42 pd \$1-evil;
#N canvas 533 82 462 464 send-signal 0;
#X obj 28 152 evil-signal-to-2x8bit;
#X obj 29 218 tabwrite~ \$0.msb.send;
#X obj 151 199 tabwrite~ \$0.lsb.send;
#X obj 194 98 f;
#X obj 236 100 + 1;
#X obj 194 147 sel 0;
#X obj 151 299 tabdump \$0.lsb.send;
#X obj 29 299 tabdump \$0.msb.send;
#X obj 29 276 t b b;
#X obj 29 328 list append;
#X obj 27 74 inlet~;
#X obj 263 11 inlet;
#X msg 290 56 0;
#X obj 292 174 table \$0.msb.send 1024;
#X obj 292 195 table \$0.lsb.send 1024;
#X obj 194 123 mod 16;
#X obj 194 61 spigot 0;
#X obj 194 28 bang~;
#X obj 29 397 s \$1.NETPD;
#X obj 29 352 list prepend sendtyped /audio b;
#X obj 29 374 list trim;
#X obj 194 169 t b b;
#X obj 263 33 t a b;
#X connect 0 0 1 0;
#X connect 0 1 2 0;
#X connect 3 0 15 0;
#X connect 4 0 3 1;
#X connect 5 0 21 0;
#X connect 6 0 9 1;
#X connect 7 0 9 0;
#X connect 8 0 7 0;
#X connect 8 1 6 0;
#X connect 9 0 19 0;
#X connect 10 0 0 0;
#X connect 11 0 22 0;
#X connect 12 0 3 1;
#X connect 15 0 4 0;
#X connect 15 0 5 0;
#X connect 16 0 3 0;
#X connect 17 0 16 0;
#X connect 19 0 20 0;
#X connect 20 0 18 0;
#X connect 21 0 2 0;
#X connect 21 0 1 0;
#X connect 21 1 8 0;
#X connect 22 0 16 1;
#X connect 22 1 12 0;
#X restore 14 264 pd send-signal;
#N canvas 181 397 589 371 receive-signal 0;
#X obj 15 17 netpd_r \$1 audio;
#X obj 227 235 evil-2x8bit-to-signal;
#X obj 15 313 s \$0.msb.receive;
#X obj 58 268 s \$0.lsb.receive;
#X obj 15 290 list prepend 0;
#X obj 58 246 list prepend 0;
#X obj 15 96 t a b;
#X obj 42 119 f;
#X obj 226 173 tabplay~ \$0.msb.receive;
#X obj 351 199 tabplay~ \$0.lsb.receive;
#X msg 147 109 0;
#X obj 42 141 + 1;
#X obj 514 195 t b;
#X obj 380 173 t b;
#X obj 226 92 sel 0 1;
#X msg 226 133 stop;
#X obj 227 303 *~;
#X obj 15 223 list split 1024;
#X obj 42 189 * 1024;
#X obj 147 11 inlet;
#X obj 257 36 table \$0.msb.receive 999424;
#X obj 257 56 table \$0.lsb.receive 999424;
#X obj 42 163 mod 976;
#X obj 147 87 sel 0;
#X obj 227 332 outlet~;
#N canvas 547 207 446 526 latency_checker 0;
#X obj 6 15 inlet;
#X obj 7 492 outlet;
#X obj 153 6 inlet;
#X obj 34 238 timer;
#X obj 33 61 f;
#X obj 33 83 + 1;
#N canvas 761 235 168 268 block_length_in_ms 0;
#X obj 13 18 inlet;
#X obj 13 213 outlet;
#X obj 70 73 samplerate~;
#X msg 70 95 1000 \$1;
#X obj 70 117 /;
#X obj 70 139 * 1024;
#X obj 70 42 loadbang;
#X obj 13 187 *;
#X connect 0 0 7 0;
#X connect 2 0 3 0;
#X connect 3 0 4 0;
#X connect 4 0 5 0;
#X connect 5 0 7 1;
#X connect 6 0 2 0;
#X connect 7 0 1 0;
#X restore 79 267 pd block_length_in_ms;
#X obj 33 345 -;
#X obj 33 465 s \$0.receive.buffer.ms;
#X text 79 238 reset timer when receiving starts;
#X obj 33 300 pack f f;
#X msg 33 322 \$2 \$1;
#X obj 6 37 t a b;
#X obj 33 107 t a a;
#X obj 60 128 sel 1;
#X msg 153 81 0;
#X obj 153 175 f;
#X obj 36 201 t b b;
#X obj 36 179 select 0 1;
#X obj 153 56 sel 0;
#X obj 153 28 t a a a;
#X obj 192 112 sel 1;
#X obj 153 153 metro 100;
#X obj 33 379 t a a;
#X obj 222 313 > 100;
#X obj 268 314 t b a;
#X obj 222 342 &&;
#X obj 222 366 change 0;
#X obj 222 411 line~;
#X obj 222 433 outlet~;
#X msg 222 389 \$1 50;
#N canvas 957 174 299 233 buffer_underrun_detected 0;
#X obj 90 24 inlet;
#X obj 16 18 inlet;
#X obj 90 50 sel 0;
#X msg 90 72 stop;
#X obj 16 144 delay;
#X obj 16 193 netpd-s /\$1/evil/rxmeta;
#X msg 16 169 BUFFERUNDERRUN;
#X obj 151 164 netpd_r \$1 owner;
#X obj 16 70 spigot;
#X msg 90 114 0;
#X connect 0 0 2 0;
#X connect 0 0 8 1;
#X connect 1 0 8 0;
#X connect 2 0 3 0;
#X connect 3 0 4 0;
#X connect 4 0 6 0;
#X connect 4 0 9 0;
#X connect 6 0 5 0;
#X connect 7 0 5 1;
#X connect 8 0 4 0;
#X connect 9 0 8 1;
#X restore 253 171 pd buffer_underrun_detected;
#X connect 0 0 12 0;
#X connect 2 0 20 0;
#X connect 3 0 10 0;
#X connect 4 0 5 0;
#X connect 5 0 4 1;
#X connect 5 0 13 0;
#X connect 6 0 10 1;
#X connect 7 0 23 0;
#X connect 10 0 11 0;
#X connect 11 0 7 0;
#X connect 12 0 1 0;
#X connect 12 1 4 0;
#X connect 13 0 6 0;
#X connect 13 1 14 0;
#X connect 14 0 22 0;
#X connect 15 0 22 0;
#X connect 15 0 4 1;
#X connect 15 0 23 0;
#X connect 16 0 18 0;
#X connect 17 0 3 1;
#X connect 17 1 3 0;
#X connect 18 0 17 0;
#X connect 18 1 3 1;
#X connect 19 0 15 0;
#X connect 20 0 19 0;
#X connect 20 1 16 1;
#X connect 20 2 21 0;
#X connect 20 2 25 0;
#X connect 20 2 31 1;
#X connect 21 0 3 0;
#X connect 22 0 16 0;
#X connect 23 0 8 0;
#X connect 23 1 24 0;
#X connect 23 1 31 0;
#X connect 24 0 26 0;
#X connect 25 0 26 0;
#X connect 25 1 26 1;
#X connect 26 0 27 0;
#X connect 27 0 30 0;
#X connect 28 0 29 0;
#X connect 30 0 28 0;
#X restore 15 55 pd latency_checker;
#X obj 147 64 t a a;
#X obj 226 113 delay 50;
#X connect 0 0 25 0;
#X connect 1 0 16 0;
#X connect 4 0 2 0;
#X connect 5 0 3 0;
#X connect 6 0 17 0;
#X connect 6 1 7 0;
#X connect 7 0 11 0;
#X connect 8 0 1 0;
#X connect 8 1 13 0;
#X connect 9 0 1 1;
#X connect 9 1 12 0;
#X connect 10 0 7 1;
#X connect 11 0 22 0;
#X connect 12 0 9 0;
#X connect 13 0 8 0;
#X connect 14 0 27 0;
#X connect 14 1 8 0;
#X connect 14 1 9 0;
#X connect 15 0 8 0;
#X connect 15 0 9 0;
#X connect 16 0 24 0;
#X connect 17 0 4 0;
#X connect 17 1 5 0;
#X connect 18 0 5 1;
#X connect 18 0 4 1;
#X connect 19 0 25 1;
#X connect 19 0 26 0;
#X connect 22 0 7 1;
#X connect 22 0 18 0;
#X connect 23 0 10 0;
#X connect 25 0 6 0;
#X connect 25 1 16 1;
#X connect 26 0 23 0;
#X connect 26 1 14 0;
#X connect 27 0 15 0;
#X restore 14 366 pd receive-signal;
#N canvas 900 149 427 221 ownership 0;
#X obj 25 82 f;
#X obj 52 64 netpd-status-get socket 1;
#X obj 25 152 ==;
#X obj 25 174 s \$0.ownership;
#X obj 25 130 t a a;
#X obj 52 152 s \$0.owner;
#X obj 25 105 netpd_f \$1 owner 0;
#X msg 234 129 label owner:\$1;
#X obj 288 49 r \$0.owner;
#X obj 234 16 r \$0.ownership;
#X obj 234 48 sel 1 0;
#X obj 273 74 f;
#X msg 234 97 symbol you;
#X obj 234 156 s \$0.owner.display;
#X obj 25 14 r \$0.owner.button;
#X obj 25 37 sel 0;
#X obj 70 36 t a;
#X connect 0 0 6 0;
#X connect 1 0 0 1;
#X connect 1 0 2 1;
#X connect 2 0 3 0;
#X connect 4 0 2 0;
#X connect 4 1 5 0;
#X connect 6 0 4 0;
#X connect 7 0 13 0;
#X connect 8 0 11 1;
#X connect 9 0 10 0;
#X connect 10 0 12 0;
#X connect 10 1 11 0;
#X connect 11 0 7 0;
#X connect 12 0 7 0;
#X connect 14 0 15 0;
#X connect 15 0 0 0;
#X connect 15 1 16 0;
#X connect 16 0 15 1;
#X restore 160 36 pd ownership;
#N canvas 882 164 390 604 calculate_start_time 0;
#X obj 39 114 master-param pos;
#X obj 12 12 inlet;
#X obj 236 127 master-param 16th;
#N canvas 572 349 298 242 calculate_real_latency 0;
#X obj 16 199 outlet;
#X obj 68 200 s \$0.latency.compensation;
#N canvas 641 269 300 420 jack_latency 0;
#X msg 150 68 2 \$1;
#X obj 150 89 pow;
#X obj 150 44 + 6;
#X obj 38 158 *;
#X obj 59 135 t b a;
#X obj 38 47 + 2;
#X obj 38 78 + 2;
#X text 67 77 why?;
#X obj 38 16 r \$0.jack.periods;
#X obj 150 15 r \$0.jack.frames;
#X text 89 271 convert samples to ms;
#X obj 38 271 t a b;
#X obj 38 318 /;
#X obj 65 295 samplerate~;
#X obj 38 341 * 1000;
#X obj 38 371 outlet;
#X connect 0 0 1 0;
#X connect 1 0 4 0;
#X connect 2 0 0 0;
#X connect 3 0 11 0;
#X connect 4 0 3 0;
#X connect 4 1 3 1;
#X connect 5 0 6 0;
#X connect 6 0 3 0;
#X connect 8 0 5 0;
#X connect 9 0 2 0;
#X connect 11 0 12 0;
#X connect 11 1 13 0;
#X connect 12 0 14 0;
#X connect 13 0 12 1;
#X connect 14 0 15 0;
#X restore 132 24 pd jack_latency;
#N canvas 238 173 433 321 alsa_latency 0;
#X obj 173 87 <<;
#X obj 173 41 t b a;
#X msg 173 64 64;
#X text 235 191 ALSA blocksize in ms;
#X obj 35 159 /;
#X obj 49 131 t b a;
#X obj 35 181 int;
#X obj 35 222 *;
#X obj 35 202 max 1;
#X obj 35 76 r \$0.alsa.msec;
#X obj 173 15 r \$0.alsa.blocksize;
#X obj 35 297 outlet;
#X text 224 112 convert samples to ms;
#X obj 173 112 t a b;
#X obj 173 159 /;
#X obj 200 136 samplerate~;
#X obj 173 182 * 1000;
#X connect 0 0 13 0;
#X connect 1 0 2 0;
#X connect 1 1 0 1;
#X connect 2 0 0 0;
#X connect 4 0 6 0;
#X connect 5 0 4 0;
#X connect 5 1 4 1;
#X connect 5 1 7 1;
#X connect 6 0 8 0;
#X connect 7 0 11 0;
#X connect 8 0 7 0;
#X connect 9 0 4 0;
#X connect 10 0 1 0;
#X connect 13 0 14 0;
#X connect 13 1 15 0;
#X connect 14 0 16 0;
#X connect 15 0 14 1;
#X connect 16 0 5 0;
#X restore 16 23 pd alsa_latency;
#X obj 16 134 t a a;
#N canvas 423 211 301 243 add_latency_introduced_by_tx/rx_buffers 0
;
#X obj 111 27 loadbang;
#X msg 111 49 1024;
#X obj 111 71 * 2;
#X text 142 49 <- evil frame length;
#X obj 138 149 samplerate~;
#X obj 111 126 t a b;
#X obj 111 172 /;
#X obj 111 194 * 1000;
#X obj 13 182 outlet;
#X obj 13 119 +;
#X obj 13 48 inlet;
#X text 147 71 <- why?;
#X obj 111 101 + 512;
#X text 150 101 <- why?;
#X connect 0 0 1 0;
#X connect 1 0 2 0;
#X connect 2 0 12 0;
#X connect 4 0 6 1;
#X connect 5 0 6 0;
#X connect 5 1 4 0;
#X connect 6 0 7 0;
#X connect 7 0 9 1;
#X connect 9 0 8 0;
#X connect 10 0 9 0;
#X connect 12 0 5 0;
#X restore 16 87 pd add_latency_introduced_by_tx/rx_buffers;
#X connect 2 0 5 0;
#X connect 3 0 5 0;
#X connect 4 0 0 0;
#X connect 4 1 1 0;
#X connect 5 0 4 0;
#X restore 183 98 pd calculate_real_latency;
#X obj 150 196 *;
#X obj 150 218 -;
#X obj 150 243 /;
#X obj 150 145 f;
#X obj 183 120 t b a;
#X obj 236 149 t b a;
#X obj 12 231 +;
#X obj 12 256 t a a;
#X obj 39 288 wrap;
#X obj 12 288 int;
#X obj 39 311 *;
#X obj 39 423 netpd_s \$1 txmeta;
#X obj 12 338 pack f f;
#X msg 12 368 start \$1 \$2;
#X text 91 366 start at tick and after ms delay;
#X text 89 378 (running master mandatory);
#X msg 12 503 1;
#X obj 12 538 outlet;
#X obj 12 41 sel 1 0;
#X obj 12 397 t a a;
#X obj 12 472 route start stop;
#X msg 58 503 0;
#X msg 99 337 stop;
#X obj 12 85 t b b;
#X obj 12 137 f;
#X obj 150 27 netpd_f \$1 delay 16;
#X connect 0 0 28 1;
#X connect 1 0 22 0;
#X connect 2 0 9 0;
#X connect 3 0 8 0;
#X connect 4 0 5 0;
#X connect 5 0 6 0;
#X connect 6 0 10 1;
#X connect 7 0 4 0;
#X connect 8 0 7 0;
#X connect 8 1 5 1;
#X connect 9 0 7 0;
#X connect 9 1 6 1;
#X connect 9 1 4 1;
#X connect 9 1 14 1;
#X connect 10 0 11 0;
#X connect 11 0 13 0;
#X connect 11 1 12 0;
#X connect 12 0 14 0;
#X connect 13 0 16 0;
#X connect 14 0 16 1;
#X connect 16 0 17 0;
#X connect 17 0 23 0;
#X connect 20 0 21 0;
#X connect 22 0 27 0;
#X connect 22 1 26 0;
#X connect 23 0 24 0;
#X connect 23 1 15 0;
#X connect 24 0 20 0;
#X connect 24 1 25 0;
#X connect 25 0 21 0;
#X connect 26 0 23 0;
#X connect 27 0 28 0;
#X connect 27 1 0 0;
#X connect 28 0 10 0;
#X connect 29 0 7 0;
#X restore 65 198 pd calculate_start_time;
#N canvas 692 213 377 288 playback_control 0;
#X obj 176 29 netpd_r \$1 txmeta;
#X obj 53 253 outlet;
#X obj 53 30 master-param step;
#X obj 53 143 select;
#X obj 176 96 t a a;
#X msg 125 119 \$1;
#X obj 53 177 delay;
#X msg 203 119 \$2;
#X msg 53 216 1;
#X obj 176 53 route start stop;
#X msg 222 173 0;
#X msg 91 111 -1;
#X connect 0 0 9 0;
#X connect 2 0 3 0;
#X connect 3 0 6 0;
#X connect 4 0 5 0;
#X connect 4 1 7 0;
#X connect 5 0 3 1;
#X connect 6 0 8 0;
#X connect 7 0 6 1;
#X connect 8 0 1 0;
#X connect 9 0 4 0;
#X connect 9 1 10 0;
#X connect 9 1 11 0;
#X connect 10 0 1 0;
#X connect 11 0 3 1;
#X restore 14 299 pd playback_control;
#N canvas 900 129 399 487 switch 0;
#X obj 17 443 outlet;
#X obj 17 94 master-param switch;
#X obj 39 147 netpd-status-get dsp 1;
#X obj 17 190 &&;
#X obj 39 169 t b a a;
#X obj 78 287 sel 0;
#X text 7 4 Following conditions must be met before starting:;
#X text 23 26 * master is running;
#X text 22 43 * DSP is turned on;
#X obj 35 211 r \$0.ownership;
#X obj 17 255 &&;
#X text 22 61 * ownership is taken;
#X obj 35 233 t b a a;
#N canvas 553 138 441 385 buffer_underrun_or_overflow 0;
#X obj 37 30 route BUFFERUNDERRUN;
#X obj 37 8 netpd-r /\$1/evil/rxmeta;
#X obj 37 85 f;
#X obj 37 54 t b b;
#X msg 149 236 0;
#X obj 149 258 outlet;
#X msg 196 238 set 0;
#X obj 196 260 s \$0.switch.r;
#X msg 37 108 buffer underrun detected on client \$1;
#X obj 37 142 netpd-error evil;
#X obj 211 17 r \$0.buffer.overflow;
#X obj 149 209 t b b;
#X obj 211 39 t b b;
#X msg 238 63 send buffer overflow detected;
#X connect 0 0 3 0;
#X connect 1 0 0 0;
#X connect 1 1 2 1;
#X connect 2 0 8 0;
#X connect 3 0 2 0;
#X connect 3 1 11 0;
#X connect 4 0 5 0;
#X connect 6 0 7 0;
#X connect 8 0 9 0;
#X connect 10 0 12 0;
#X connect 11 0 4 0;
#X connect 11 1 6 0;
#X connect 12 0 11 0;
#X connect 12 1 13 0;
#X connect 13 0 9 0;
#X restore 61 401 pd buffer_underrun_or_overflow;
#X obj 235 124 s \$0.master.display;
#X obj 226 234 s \$0.dsp.display;
#X msg 235 102 color -1 -1 \$1;
#X msg 265 78 16;
#X obj 235 57 sel 0 1;
#X obj 17 116 t a a;
#X msg 226 212 color -1 -1 \$1;
#X msg 256 188 16;
#X obj 226 167 sel 0 1;
#X msg 172 321 color -1 -1 \$1;
#X msg 202 297 16;
#X obj 172 276 sel 0 1;
#X obj 172 343 s \$0.owner.display;
#X msg 235 79 20;
#X msg 226 189 20;
#X msg 172 298 20;
#N canvas 550 214 448 328 switch.widget 1;
#X obj 11 247 outlet;
#X obj 165 58 inlet;
#X obj 170 278 s \$0.switch.display;
#X msg 267 222 16;
#X msg 170 253 color \$1 -1;
#X msg 170 223 22;
#X msg 220 224 26;
#X obj 12 14 r \$0.switch.button;
#X obj 12 36 sel 0;
#X obj 55 36 t a;
#X obj 12 131 == 0;
#X obj 249 16 inlet;
#X obj 30 78 t b b;
#X msg 57 101 1;
#X text 293 16 stop;
#X obj 12 163 &&;
#X obj 12 185 t a a a;
#X obj 165 81 t a a a a;
#X obj 267 164 &&;
#X obj 267 186 sel 1;
#X obj 170 165 ||;
#X obj 170 187 sel 0;
#X obj 13 223 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X obj 99 43 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj 222 61 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X obj 218 185 sel 1;
#X connect 1 0 17 0;
#X connect 3 0 4 0;
#X connect 4 0 2 0;
#X connect 5 0 4 0;
#X connect 6 0 4 0;
#X connect 7 0 8 0;
#X connect 8 0 10 0;
#X connect 8 1 9 0;
#X connect 9 0 8 1;
#X connect 10 0 15 0;
#X connect 11 0 12 0;
#X connect 12 0 10 0;
#X connect 12 1 13 0;
#X connect 13 0 10 1;
#X connect 15 0 16 0;
#X connect 16 0 22 0;
#X connect 16 1 10 1;
#X connect 16 2 18 0;
#X connect 16 2 20 0;
#X connect 17 0 15 1;
#X connect 17 1 20 1;
#X connect 17 2 25 0;
#X connect 17 3 18 1;
#X connect 18 0 19 0;
#X connect 19 0 3 0;
#X connect 20 0 21 0;
#X connect 21 0 5 0;
#X connect 23 0 12 0;
#X connect 24 0 17 0;
#X connect 25 0 6 0;
#X restore 17 351 pd switch.widget;
#X msg 78 309 stop;
#X connect 1 0 19 0;
#X connect 2 0 4 0;
#X connect 3 0 10 0;
#X connect 4 0 3 0;
#X connect 4 1 3 1;
#X connect 4 2 5 0;
#X connect 4 2 22 0;
#X connect 5 0 31 0;
#X connect 9 0 12 0;
#X connect 10 0 30 0;
#X connect 12 0 10 0;
#X connect 12 1 10 1;
#X connect 12 2 5 0;
#X connect 12 2 25 0;
#X connect 13 0 0 0;
#X connect 16 0 14 0;
#X connect 17 0 16 0;
#X connect 18 0 27 0;
#X connect 18 1 17 0;
#X connect 19 0 3 0;
#X connect 19 1 18 0;
#X connect 20 0 15 0;
#X connect 21 0 20 0;
#X connect 22 0 28 0;
#X connect 22 1 21 0;
#X connect 23 0 26 0;
#X connect 24 0 23 0;
#X connect 25 0 29 0;
#X connect 25 1 24 0;
#X connect 27 0 16 0;
#X connect 28 0 20 0;
#X connect 29 0 23 0;
#X connect 30 0 0 0;
#X connect 31 0 30 1;
#X restore 65 169 pd switch;
#X obj 14 113 adc~ 1;
#X obj 13 404 i2mx \$1 evil;
#X obj 14 138 clip~ -0.999 0.999;
#X obj 95 404 s~ \$1.EVIL;
#N canvas 745 138 484 482 monitor_network_send_buffer 0;
#X obj 4 84 inlet;
#X obj 4 143 t a a;
#X obj 4 404 outlet;
#X obj 63 95 r NETPD;
#X obj 63 117 route status;
#X obj 63 139 route sendbuffersize;
#X obj 246 104 netpd_r \$1 delay;
#X obj 222 82 master-param 16th;
#X obj 246 126 t b a;
#X obj 222 152 *;
#N canvas 384 216 327 182 ms2samps 0;
#X obj 18 25 inlet;
#X obj 18 148 outlet;
#X obj 45 76 samplerate~;
#X obj 18 47 t a b;
#X obj 18 100 *;
#X obj 18 122 / 1000;
#X connect 0 0 3 0;
#X connect 2 0 4 1;
#X connect 3 0 4 0;
#X connect 3 1 2 0;
#X connect 4 0 5 0;
#X connect 5 0 1 0;
#X restore 100 301 pd ms2samps;
#X obj 100 323 * 2;
#X text 128 323 samps * 2 -> bytes;
#X obj 100 350 * 0.8;
#X text 10 8 We monitor the send buffer to check whether we have a
fast enough uplink for sending live audio. If the network send buffer
exceeds 80% of the audio buffer \, we stop sending audio.;
#X text 143 351 80% buffer fill;
#X obj 63 205 spigot 0;
#X obj 63 380 >;
#X obj 63 407 sel 1;
#X text 224 65 calculate audio buffer in bytes;
#X obj 63 438 s \$0.buffer.overflow;
#X obj 135 227 f;
#X obj 108 179 t a a;
#X obj 135 205 sel 1;
#X obj 135 249 t a a;
#X obj 260 201 netpd_s \$1 audiobuffer;
#X obj 262 226 r \$0.receive.buffer.ms;
#X obj 262 275 /;
#X obj 262 297 * 100;
#X obj 262 319 int;
#X obj 262 384 s \$0.receive.buffer.percent;
#X obj 262 340 max 0;
#X obj 262 362 change;
#X obj 277 250 netpd_r \$1 audiobuffer;
#X connect 0 0 1 0;
#X connect 1 0 2 0;
#X connect 1 1 22 0;
#X connect 3 0 4 0;
#X connect 4 0 5 0;
#X connect 5 0 16 0;
#X connect 6 0 8 0;
#X connect 7 0 9 0;
#X connect 8 0 9 0;
#X connect 8 1 9 1;
#X connect 9 0 21 1;
#X connect 10 0 11 0;
#X connect 11 0 13 0;
#X connect 13 0 17 1;
#X connect 16 0 17 0;
#X connect 17 0 18 0;
#X connect 18 0 20 0;
#X connect 21 0 24 0;
#X connect 22 0 16 1;
#X connect 22 1 23 0;
#X connect 23 0 21 0;
#X connect 24 0 10 0;
#X connect 24 1 25 0;
#X connect 26 0 27 0;
#X connect 27 0 28 0;
#X connect 28 0 29 0;
#X connect 29 0 31 0;
#X connect 31 0 32 0;
#X connect 32 0 30 0;
#X connect 33 0 27 1;
#X restore 65 226 pd monitor_network_send_buffer;
#X obj 14 321 t a a;
#X obj 67 326 s \$0.playback;
#X connect 4 0 10 0;
#X connect 4 0 10 1;
#X connect 4 0 12 0;
#X connect 6 0 13 0;
#X connect 7 0 14 0;
#X connect 8 0 6 0;
#X connect 9 0 11 0;
#X connect 11 0 3 0;
#X connect 13 0 3 1;
#X connect 14 0 4 0;
#X connect 14 1 15 0;
